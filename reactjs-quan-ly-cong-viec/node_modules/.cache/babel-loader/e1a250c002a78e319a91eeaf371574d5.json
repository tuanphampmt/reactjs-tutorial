{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/macad/Documents/GitHub/reactjs-tutorial/reactjs-quan-ly-cong-viec/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport Control from \"./components/Control\";\nimport TaskAddForm from \"./components/TaskAddForm\";\nimport TaskEditForm from \"./components/TaskEditForm\";\nimport TaskList from \"./components/TaskList\";\nimport * as constants from \"./constants/index\";\nimport * as converter from \"./converter/index\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getStatusAddListFrom = () => {\n      this.setState({\n        isDisplayForm: !this.state.isDisplayForm,\n        isDisplayEditForm: false\n      });\n    };\n\n    this.getStatusRemoveFrom = isDisplayForm => {\n      this.setState({\n        isDisplayForm: isDisplayForm,\n        isDisplayEditForm: isDisplayForm\n      });\n    };\n\n    this.getInfoTasks = task => {\n      const {\n        tasks\n      } = this.state;\n      tasks.push(task);\n      this.setState({\n        tasks: tasks\n      });\n      localStorage.setItem(constants.DATA_TASK_LIST, JSON.stringify(tasks));\n    };\n\n    this.findByIdAndRemoveTask = id => {\n      const tasks = this.state.tasks.filter(task => task.id !== id);\n      this.setState({\n        tasks: tasks\n      });\n      localStorage.setItem(constants.DATA_TASK_LIST, JSON.stringify(tasks));\n    };\n\n    this.updateOneById = id => {\n      const {\n        tasks\n      } = this.state;\n      const dataUpdate = tasks.find(task => task.id === id);\n      this.setState({\n        dataUpdate: dataUpdate\n      });\n    };\n\n    this.getStatusEditFrom = () => {\n      const editFrom = document.getElementById(\"edit-form\");\n\n      if (!editFrom) {\n        this.setState({\n          isDisplayEditForm: !this.state.isDisplayEditForm,\n          isDisplayForm: false\n        });\n      }\n    };\n\n    this.updateOne = task => {\n      const tasks = this.state.tasks.map(t => {\n        if (t.id === task.id) {\n          t.name = task.name;\n          t.status = task.status;\n          return t;\n        }\n\n        return t;\n      });\n      this.setState({\n        tasks: tasks\n      });\n      localStorage.setItem(constants.DATA_TASK_LIST, JSON.stringify(tasks));\n    };\n\n    this.getSearchText = text => {\n      console.log(text === \"\");\n      this.setState({\n        searchText: text.toLowerCase().trim()\n      });\n    };\n\n    this.getArrayList = () => {\n      let arrayList = [];\n      console.log(this.state.searchText);\n      this.state.tasks.forEach(task => {\n        if (converter.toSlug(task.name).toLowerCase().trim().indexOf(this.state.searchText) !== -1) {\n          arrayList.push(task);\n        }\n      });\n      return arrayList;\n    };\n\n    this.state = {\n      tasks: [],\n      isDisplayForm: false,\n      dataUpdate: {},\n      isDisplayEditForm: false,\n      searchText: \"\"\n    };\n  }\n\n  componentDidMount() {\n    const tasks = JSON.parse(localStorage.getItem(constants.DATA_TASK_LIST));\n\n    if (Array.isArray(tasks) && tasks.length) {\n      this.setState({\n        tasks: tasks\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Qu\\u1EA3n L\\xFD C\\xF4ng Vi\\u1EC7c\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-xs-12 col-sm-12 col-md-4 col-lg-4\",\n            children: [this.state.isDisplayForm && /*#__PURE__*/_jsxDEV(TaskAddForm, {\n              getStatusRemoveFrom: isDisplayForm => this.getStatusRemoveFrom(isDisplayForm),\n              getInfoTasks: task => this.getInfoTasks(task)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 33\n            }, this), this.state.isDisplayEditForm && /*#__PURE__*/_jsxDEV(TaskEditForm, {\n              getStatusRemoveFrom: isDisplayForm => this.getStatusRemoveFrom(isDisplayForm),\n              dataUpdate: this.state.dataUpdate,\n              updateOne: task => this.updateOne(task)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: this.state.isDisplayForm || this.state.isDisplayEditForm ? \"col-xs-12 col-sm-12 col-md-8 col-lg-8\" : \"col-xs-12 col-sm-12 col-md-8 col-lg-8 col-12\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-primary mb-10\",\n              onClick: this.getStatusAddListFrom,\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-plus mr-3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 33\n              }, this), \"Th\\xEAm C\\xF4ng Vi\\u1EC7c\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Control, {\n              getSearchText: text => this.getSearchText(text)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row mt-15\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n                children: /*#__PURE__*/_jsxDEV(TaskList, {\n                  tasks: this.getArrayList(),\n                  isDisplayForm: this.state.isDisplayForm,\n                  isDisplayEditForm: this.state.isDisplayEditForm,\n                  findByIdAndRemoveTask: id => this.findByIdAndRemoveTask(id),\n                  updateOneById: id => this.updateOneById(id),\n                  getStatusEditFrom: () => this.getStatusEditFrom(),\n                  getSearchText: text => this.getSearchText(text)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/macad/Documents/GitHub/reactjs-tutorial/reactjs-quan-ly-cong-viec/src/App.js"],"names":["React","Component","Control","TaskAddForm","TaskEditForm","TaskList","constants","converter","App","constructor","props","getStatusAddListFrom","setState","isDisplayForm","state","isDisplayEditForm","getStatusRemoveFrom","getInfoTasks","task","tasks","push","localStorage","setItem","DATA_TASK_LIST","JSON","stringify","findByIdAndRemoveTask","id","filter","updateOneById","dataUpdate","find","getStatusEditFrom","editFrom","document","getElementById","updateOne","map","t","name","status","getSearchText","text","console","log","searchText","toLowerCase","trim","getArrayList","arrayList","forEach","toSlug","indexOf","componentDidMount","parse","getItem","Array","isArray","length","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAO,KAAKC,SAAZ,MAA2B,mBAA3B;AACA,OAAO,KAAKC,SAAZ,MAA2B,mBAA3B;;AAEA,MAAMC,GAAN,SAAkBP,SAAlB,CAA4B;AACxBQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAmBnBC,oBAnBmB,GAmBI,MAAM;AACzB,WAAKC,QAAL,CAAc;AACVC,QAAAA,aAAa,EAAE,CAAC,KAAKC,KAAL,CAAWD,aADjB;AAEVE,QAAAA,iBAAiB,EAAE;AAFT,OAAd;AAIH,KAxBkB;;AAAA,SA0BnBC,mBA1BmB,GA0BIH,aAAD,IAAmB;AACrC,WAAKD,QAAL,CAAc;AACVC,QAAAA,aAAa,EAAEA,aADL;AAEVE,QAAAA,iBAAiB,EAAEF;AAFT,OAAd;AAIH,KA/BkB;;AAAA,SAiCnBI,YAjCmB,GAiCHC,IAAD,IAAU;AACrB,YAAM;AAACC,QAAAA;AAAD,UAAU,KAAKL,KAArB;AAEAK,MAAAA,KAAK,CAACC,IAAN,CAAWF,IAAX;AACA,WAAKN,QAAL,CAAc;AAACO,QAAAA,KAAK,EAAEA;AAAR,OAAd;AAEAE,MAAAA,YAAY,CAACC,OAAb,CAAqBhB,SAAS,CAACiB,cAA/B,EAA+CC,IAAI,CAACC,SAAL,CAAeN,KAAf,CAA/C;AACH,KAxCkB;;AAAA,SA0CnBO,qBA1CmB,GA0CMC,EAAD,IAAQ;AAC5B,YAAMR,KAAK,GAAG,KAAKL,KAAL,CAAWK,KAAX,CAAiBS,MAAjB,CAAyBV,IAAD,IAAUA,IAAI,CAACS,EAAL,KAAYA,EAA9C,CAAd;AAEA,WAAKf,QAAL,CAAc;AAACO,QAAAA,KAAK,EAAEA;AAAR,OAAd;AAEAE,MAAAA,YAAY,CAACC,OAAb,CAAqBhB,SAAS,CAACiB,cAA/B,EAA+CC,IAAI,CAACC,SAAL,CAAeN,KAAf,CAA/C;AACH,KAhDkB;;AAAA,SAkDnBU,aAlDmB,GAkDFF,EAAD,IAAQ;AACpB,YAAM;AAACR,QAAAA;AAAD,UAAU,KAAKL,KAArB;AACA,YAAMgB,UAAU,GAAGX,KAAK,CAACY,IAAN,CAAYb,IAAD,IAAUA,IAAI,CAACS,EAAL,KAAYA,EAAjC,CAAnB;AACA,WAAKf,QAAL,CAAc;AAACkB,QAAAA,UAAU,EAAEA;AAAb,OAAd;AACH,KAtDkB;;AAAA,SAwDnBE,iBAxDmB,GAwDC,MAAM;AACtB,YAAMC,QAAQ,GAAGC,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAAjB;;AACA,UAAI,CAACF,QAAL,EAAe;AACX,aAAKrB,QAAL,CAAc;AACVG,UAAAA,iBAAiB,EAAE,CAAC,KAAKD,KAAL,CAAWC,iBADrB;AAEVF,UAAAA,aAAa,EAAE;AAFL,SAAd;AAIH;AACJ,KAhEkB;;AAAA,SAkEnBuB,SAlEmB,GAkENlB,IAAD,IAAU;AAClB,YAAMC,KAAK,GAAG,KAAKL,KAAL,CAAWK,KAAX,CAAiBkB,GAAjB,CAAsBC,CAAD,IAAO;AACtC,YAAIA,CAAC,CAACX,EAAF,KAAST,IAAI,CAACS,EAAlB,EAAsB;AAClBW,UAAAA,CAAC,CAACC,IAAF,GAASrB,IAAI,CAACqB,IAAd;AACAD,UAAAA,CAAC,CAACE,MAAF,GAAWtB,IAAI,CAACsB,MAAhB;AACA,iBAAOF,CAAP;AACH;;AACD,eAAOA,CAAP;AACH,OAPa,CAAd;AASA,WAAK1B,QAAL,CAAc;AAACO,QAAAA,KAAK,EAAEA;AAAR,OAAd;AACAE,MAAAA,YAAY,CAACC,OAAb,CAAqBhB,SAAS,CAACiB,cAA/B,EAA+CC,IAAI,CAACC,SAAL,CAAeN,KAAf,CAA/C;AACH,KA9EkB;;AAAA,SAgFnBsB,aAhFmB,GAgFFC,IAAD,IAAU;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,KAAK,EAArB;AACA,WAAK9B,QAAL,CAAc;AAACiC,QAAAA,UAAU,EAAEH,IAAI,CAACI,WAAL,GAAmBC,IAAnB;AAAb,OAAd;AACH,KAnFkB;;AAAA,SAoFnBC,YApFmB,GAoFJ,MAAM;AACjB,UAAIC,SAAS,GAAG,EAAhB;AAEAN,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAK9B,KAAL,CAAW+B,UAAvB;AACA,WAAK/B,KAAL,CAAWK,KAAX,CAAiB+B,OAAjB,CAA0BhC,IAAD,IAAU;AAC/B,YAAIX,SAAS,CAAC4C,MAAV,CAAiBjC,IAAI,CAACqB,IAAtB,EAA4BO,WAA5B,GAA0CC,IAA1C,GAAiDK,OAAjD,CAAyD,KAAKtC,KAAL,CAAW+B,UAApE,MAAoF,CAAC,CAAzF,EAA4F;AACxFI,UAAAA,SAAS,CAAC7B,IAAV,CAAeF,IAAf;AACH;AACJ,OAJD;AAKA,aAAO+B,SAAP;AACH,KA9FkB;;AAEf,SAAKnC,KAAL,GAAa;AACTK,MAAAA,KAAK,EAAE,EADE;AAETN,MAAAA,aAAa,EAAE,KAFN;AAGTiB,MAAAA,UAAU,EAAE,EAHH;AAITf,MAAAA,iBAAiB,EAAE,KAJV;AAKT8B,MAAAA,UAAU,EAAE;AALH,KAAb;AAOH;;AAEDQ,EAAAA,iBAAiB,GAAG;AAChB,UAAMlC,KAAK,GAAGK,IAAI,CAAC8B,KAAL,CAAWjC,YAAY,CAACkC,OAAb,CAAqBjD,SAAS,CAACiB,cAA/B,CAAX,CAAd;;AAEA,QAAIiC,KAAK,CAACC,OAAN,CAActC,KAAd,KAAwBA,KAAK,CAACuC,MAAlC,EAA0C;AACtC,WAAK9C,QAAL,CAAc;AAACO,QAAAA,KAAK,EAAEA;AAAR,OAAd;AACH;AACJ;;AA+EDwC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,uCAAf;AAAA,uBACK,KAAK7C,KAAL,CAAWD,aAAX,iBACG,QAAC,WAAD;AACI,cAAA,mBAAmB,EAAGA,aAAD,IACjB,KAAKG,mBAAL,CAAyBH,aAAzB,CAFR;AAII,cAAA,YAAY,EAAGK,IAAD,IAAU,KAAKD,YAAL,CAAkBC,IAAlB;AAJ5B;AAAA;AAAA;AAAA;AAAA,oBAFR,EAUK,KAAKJ,KAAL,CAAWC,iBAAX,iBACG,QAAC,YAAD;AACI,cAAA,mBAAmB,EAAGF,aAAD,IACjB,KAAKG,mBAAL,CAAyBH,aAAzB,CAFR;AAII,cAAA,UAAU,EAAE,KAAKC,KAAL,CAAWgB,UAJ3B;AAKI,cAAA,SAAS,EAAGZ,IAAD,IAAU,KAAKkB,SAAL,CAAelB,IAAf;AALzB;AAAA;AAAA;AAAA;AAAA,oBAXR;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAqBI;AACI,YAAA,SAAS,EACL,KAAKJ,KAAL,CAAWD,aAAX,IAA4B,KAAKC,KAAL,CAAWC,iBAAvC,GACM,uCADN,GAEM,8CAJd;AAAA,oCAOI;AACI,cAAA,IAAI,EAAC,QADT;AAEI,cAAA,SAAS,EAAC,uBAFd;AAGI,cAAA,OAAO,EAAE,KAAKJ,oBAHlB;AAAA,sCAKI;AAAG,gBAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,sBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPJ,eAcI,QAAC,OAAD;AACI,cAAA,aAAa,EAAG+B,IAAD,IAAU,KAAKD,aAAL,CAAmBC,IAAnB;AAD7B;AAAA;AAAA;AAAA;AAAA,oBAdJ,eAiBI;AAAK,cAAA,SAAS,EAAC,WAAf;AAAA,qCACI;AAAK,gBAAA,SAAS,EAAC,yCAAf;AAAA,uCACI,QAAC,QAAD;AACI,kBAAA,KAAK,EAAE,KAAKM,YAAL,EADX;AAEI,kBAAA,aAAa,EAAE,KAAKlC,KAAL,CAAWD,aAF9B;AAGI,kBAAA,iBAAiB,EAAE,KAAKC,KAAL,CAAWC,iBAHlC;AAII,kBAAA,qBAAqB,EAAGY,EAAD,IACnB,KAAKD,qBAAL,CAA2BC,EAA3B,CALR;AAOI,kBAAA,aAAa,EAAGA,EAAD,IAAQ,KAAKE,aAAL,CAAmBF,EAAnB,CAP3B;AAQI,kBAAA,iBAAiB,EAAE,MAAM,KAAKK,iBAAL,EAR7B;AASI,kBAAA,aAAa,EAAGU,IAAD,IAAU,KAAKD,aAAL,CAAmBC,IAAnB;AAT7B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBArBJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAiEH;;AAnKuB;;AAsK5B,eAAelC,GAAf","sourcesContent":["import React, {Component} from \"react\";\nimport \"./App.css\";\nimport Control from \"./components/Control\";\nimport TaskAddForm from \"./components/TaskAddForm\";\nimport TaskEditForm from \"./components/TaskEditForm\";\nimport TaskList from \"./components/TaskList\";\nimport * as constants from \"./constants/index\";\nimport * as converter from \"./converter/index\"\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tasks: [],\n            isDisplayForm: false,\n            dataUpdate: {},\n            isDisplayEditForm: false,\n            searchText: \"\"\n        };\n    }\n\n    componentDidMount() {\n        const tasks = JSON.parse(localStorage.getItem(constants.DATA_TASK_LIST));\n\n        if (Array.isArray(tasks) && tasks.length) {\n            this.setState({tasks: tasks});\n        }\n    }\n\n    getStatusAddListFrom = () => {\n        this.setState({\n            isDisplayForm: !this.state.isDisplayForm,\n            isDisplayEditForm: false,\n        });\n    };\n\n    getStatusRemoveFrom = (isDisplayForm) => {\n        this.setState({\n            isDisplayForm: isDisplayForm,\n            isDisplayEditForm: isDisplayForm,\n        });\n    };\n\n    getInfoTasks = (task) => {\n        const {tasks} = this.state;\n\n        tasks.push(task);\n        this.setState({tasks: tasks});\n\n        localStorage.setItem(constants.DATA_TASK_LIST, JSON.stringify(tasks));\n    };\n\n    findByIdAndRemoveTask = (id) => {\n        const tasks = this.state.tasks.filter((task) => task.id !== id);\n\n        this.setState({tasks: tasks});\n\n        localStorage.setItem(constants.DATA_TASK_LIST, JSON.stringify(tasks));\n    };\n\n    updateOneById = (id) => {\n        const {tasks} = this.state;\n        const dataUpdate = tasks.find((task) => task.id === id);\n        this.setState({dataUpdate: dataUpdate});\n    };\n\n    getStatusEditFrom = () => {\n        const editFrom = document.getElementById(\"edit-form\");\n        if (!editFrom) {\n            this.setState({\n                isDisplayEditForm: !this.state.isDisplayEditForm,\n                isDisplayForm: false,\n            });\n        }\n    };\n\n    updateOne = (task) => {\n        const tasks = this.state.tasks.map((t) => {\n            if (t.id === task.id) {\n                t.name = task.name;\n                t.status = task.status;\n                return t;\n            }\n            return t;\n        });\n\n        this.setState({tasks: tasks});\n        localStorage.setItem(constants.DATA_TASK_LIST, JSON.stringify(tasks));\n    };\n\n    getSearchText = (text) => {\n        console.log(text === \"\")\n        this.setState({searchText: text.toLowerCase().trim()});\n    }\n    getArrayList = () => {\n        let arrayList = [];\n\n        console.log(this.state.searchText)\n        this.state.tasks.forEach((task) => {\n            if (converter.toSlug(task.name).toLowerCase().trim().indexOf(this.state.searchText) !== -1) {\n                arrayList.push(task);\n            }\n        })\n        return arrayList;\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"container\">\n                    <div className=\"text-center\">\n                        <h1>Quản Lý Công Việc</h1>\n                        <hr/>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-xs-12 col-sm-12 col-md-4 col-lg-4\">\n                            {this.state.isDisplayForm && (\n                                <TaskAddForm\n                                    getStatusRemoveFrom={(isDisplayForm) =>\n                                        this.getStatusRemoveFrom(isDisplayForm)\n                                    }\n                                    getInfoTasks={(task) => this.getInfoTasks(task)}\n                                />\n                            )}\n\n                            {this.state.isDisplayEditForm && (\n                                <TaskEditForm\n                                    getStatusRemoveFrom={(isDisplayForm) =>\n                                        this.getStatusRemoveFrom(isDisplayForm)\n                                    }\n                                    dataUpdate={this.state.dataUpdate}\n                                    updateOne={(task) => this.updateOne(task)}\n                                />\n                            )}\n                        </div>\n                        <div\n                            className={\n                                this.state.isDisplayForm || this.state.isDisplayEditForm\n                                    ? \"col-xs-12 col-sm-12 col-md-8 col-lg-8\"\n                                    : \"col-xs-12 col-sm-12 col-md-8 col-lg-8 col-12\"\n                            }\n                        >\n                            <button\n                                type=\"button\"\n                                className=\"btn btn-primary mb-10\"\n                                onClick={this.getStatusAddListFrom}\n                            >\n                                <i className=\"fa fa-plus mr-3\"></i>Thêm Công Việc\n                            </button>\n                            <Control\n                                getSearchText={(text) => this.getSearchText(text)}\n                            />\n                            <div className=\"row mt-15\">\n                                <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                                    <TaskList\n                                        tasks={this.getArrayList()}\n                                        isDisplayForm={this.state.isDisplayForm}\n                                        isDisplayEditForm={this.state.isDisplayEditForm}\n                                        findByIdAndRemoveTask={(id) =>\n                                            this.findByIdAndRemoveTask(id)\n                                        }\n                                        updateOneById={(id) => this.updateOneById(id)}\n                                        getStatusEditFrom={() => this.getStatusEditFrom()}\n                                        getSearchText={(text) => this.getSearchText(text)}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}