{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/macad/Documents/GitHub/reactjs-tutorial/reactjs-quan-ly-cong-viec/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport Control from \"./components/Control\";\nimport TaskForm from \"./components/TaskForm\";\nimport TaskList from \"./components/TaskList\";\nimport * as constants from \"./constants/index\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getStatusAddListFrom = () => {\n      const tasks = [{\n        id: uuidv4(),\n        name: \"Học lập trình Java\",\n        status: true\n      }, {\n        id: uuidv4(),\n        name: \"Học lập trình Nodejs\",\n        status: false\n      }, {\n        id: uuidv4(),\n        name: \"Học lập trình Reactjs and Redux\",\n        status: true\n      }, {\n        id: uuidv4(),\n        name: \"Học lập trình Reactjs and Redux\",\n        status: false\n      }];\n      localStorage.setItem(constants.DATA_TASK_LIST, JSON.stringify(tasks));\n      this.setState({\n        isDisplayForm: !this.state.isDisplayForm\n      });\n    };\n\n    this.getStatusRemoveFrom = isDisplayForm => {\n      this.setState({\n        isDisplayForm: isDisplayForm\n      });\n    };\n\n    this.getInfoTasks = task => {\n      const {\n        tasks\n      } = this.state;\n      tasks.push(task);\n      this.setState({\n        tasks: tasks\n      });\n      localStorage.setItem(constants.DATA_TASK_LIST, JSON.stringify(tasks));\n    };\n\n    this.findByIdAndRemoveTask = id => {\n      const tasks = this.state.tasks.filter(task => task.id !== id);\n      this.setState({\n        tasks: tasks\n      }); // localStorage.setItem(constants.DATA_TASK_LIST, JSON.stringify(tasks))\n    };\n\n    this.state = {\n      tasks: [],\n      isDisplayForm: false\n    };\n  }\n\n  componentDidMount() {// const tasks = JSON.parse(localStorage.getItem(constants.DATA_TASK_LIST));\n    // //Check if an array is empty or exists\n    // if (Array.isArray(tasks) && tasks.length) {\n    //   this.setState({ tasks: tasks });\n    // }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Qu\\u1EA3n L\\xFD C\\xF4ng Vi\\u1EC7c\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-xs-12 col-sm-12 col-md-4 col-lg-4\",\n            children: this.state.isDisplayForm && /*#__PURE__*/_jsxDEV(TaskForm, {\n              getStatusRemoveFrom: isDisplayForm => this.getStatusRemoveFrom(isDisplayForm),\n              getInfoTasks: task => this.getInfoTasks(task)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 44\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: this.state.isDisplayForm ? \"col-xs-12 col-sm-12 col-md-8 col-lg-8\" : \"col-xs-12 col-sm-12 col-md-8 col-lg-8 col-12\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-primary mb-10\",\n              onClick: this.getStatusAddListFrom,\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-plus mr-3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 17\n              }, this), \"Th\\xEAm C\\xF4ng Vi\\u1EC7c\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Control, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row mt-15\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n                children: /*#__PURE__*/_jsxDEV(TaskList, {\n                  tasks: this.state.tasks,\n                  isDisplayForm: this.state.isDisplayForm,\n                  findByIdAndRemoveTask: id => this.findByIdAndRemoveTask(id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/macad/Documents/GitHub/reactjs-tutorial/reactjs-quan-ly-cong-viec/src/App.js"],"names":["React","Component","Control","TaskForm","TaskList","constants","v4","uuidv4","App","constructor","props","getStatusAddListFrom","tasks","id","name","status","localStorage","setItem","DATA_TASK_LIST","JSON","stringify","setState","isDisplayForm","state","getStatusRemoveFrom","getInfoTasks","task","push","findByIdAndRemoveTask","filter","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Control from \"./components/Control\";\nimport TaskForm from \"./components/TaskForm\";\nimport TaskList from \"./components/TaskList\";\nimport * as constants from \"./constants/index\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks: [],\n      isDisplayForm: false,\n    };\n  }\n\n  componentDidMount() {\n\n    // const tasks = JSON.parse(localStorage.getItem(constants.DATA_TASK_LIST));\n\n    // //Check if an array is empty or exists\n    // if (Array.isArray(tasks) && tasks.length) {\n    //   this.setState({ tasks: tasks });\n    // }\n  }\n\n  getStatusAddListFrom = () => {\n    \n        const tasks = [\n            {\n                id: uuidv4(),\n                name: \"Học lập trình Java\",\n                status: true\n            },\n            {\n                id: uuidv4(),\n                name: \"Học lập trình Nodejs\",\n                status: false\n            },\n            {\n                id: uuidv4(),\n                name: \"Học lập trình Reactjs and Redux\",\n                status: true\n            },\n            {\n                id: uuidv4(),\n                name: \"Học lập trình Reactjs and Redux\",\n                status: false\n            }\n        ];\n      localStorage.setItem(constants.DATA_TASK_LIST, JSON.stringify(tasks))\n    this.setState({ isDisplayForm: !this.state.isDisplayForm });\n  };\n\n  getStatusRemoveFrom = (isDisplayForm) => {\n        this.setState({ isDisplayForm: isDisplayForm });\n  }\n\n  getInfoTasks = (task) => {\n        const {tasks} = this.state;\n\n        tasks.push(task)\n        this.setState({ tasks: tasks });\n\n        localStorage.setItem(constants.DATA_TASK_LIST, JSON.stringify(tasks))\n  }\n  findByIdAndRemoveTask = (id) => {\n    const tasks = this.state.tasks.filter(task => task.id !== id);\n    \n    this.setState({ tasks: tasks})\n\n    // localStorage.setItem(constants.DATA_TASK_LIST, JSON.stringify(tasks))\n\n  }\n  render() {\n    return (\n      <div>\n        <div className=\"container\">\n          <div className=\"text-center\">\n            <h1>Quản Lý Công Việc</h1>\n            <hr />\n          </div>\n          <div className=\"row\">\n            <div className=\"col-xs-12 col-sm-12 col-md-4 col-lg-4\">\n              {this.state.isDisplayForm && <TaskForm \n              getStatusRemoveFrom={(isDisplayForm) => this.getStatusRemoveFrom(isDisplayForm)}\n              getInfoTasks={(task) => this.getInfoTasks(task)}\n              />}\n              {/* <TaskForm /> */}\n            </div>\n            <div\n              className={\n                this.state.isDisplayForm\n                  ? \"col-xs-12 col-sm-12 col-md-8 col-lg-8\"\n                  : \"col-xs-12 col-sm-12 col-md-8 col-lg-8 col-12\"\n              }\n            >\n              <button\n                type=\"button\"\n                className=\"btn btn-primary mb-10\"\n                onClick={this.getStatusAddListFrom}\n              >\n                <i className=\"fa fa-plus mr-3\"></i>Thêm Công Việc\n              </button>\n              <Control />\n              <div className=\"row mt-15\">\n                <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                  <TaskList\n                    tasks={this.state.tasks}\n                    isDisplayForm={this.state.isDisplayForm}\n                    findByIdAndRemoveTask={(id) => this.findByIdAndRemoveTask(id)}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}